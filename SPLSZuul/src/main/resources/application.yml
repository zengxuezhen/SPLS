#客户端端口
server:
  port: 8086
#Eureka客户端相关配置
#连接注册中心的配置
eureka: 
  client:
    service-url:
      defaultZone: http://localhost:8081/eureka/
#该服务在注册中心的名称
spring:
  application:
    name: zuul-service
  main:
    allow-bean-definition-overriding: true
  #oracle数据库相关配置
  datasource:
    url: jdbc:oracle:thin:@10.1.12.223:1521:orcl
    driver-class-name: oracle.jdbc.driver.OracleDriver
    username: p2p
    password: 123456
  #redis相关配置
  redis:
    host: 10.1.12.223
    port: 6379
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
#自定义路由转发，隐藏服务名
zuul: 
  routes: 
    user-service: /user/**
    credit-service: /credit/**
    debit-service: /debit/**
    backStage-service: /backStage/**
#防止网关转发请求后session失效,发送请求头
  sensitive-headers: "*" 
#环境隔离，不允许使用服务名进入程序
  ignored-patterns: /*-server/**
###网关超时配置###
#HTTP连接超时要比Hystrix的大
  host: 
    connect-timeout-millis: 100000
#socket超时
    socket-timeout-millis: 50000
#请求限流配置
  ratelimit: 
    key-prefix: springcloud-book #按粒度拆分的临时变量key前缀
    enabled: true #启用开关
    repository: REDIS #key存储，默认是IN_MEMORY本地内存，此外还有多种形式
    behind-proxy: true #表示代理之后
    default-policy: #全局限流策略，可单独细化到服务粒度
      limit: 10 #在一个单位时间窗口的请求数量
      quota: 10 #在一个单位时间窗口的请求时间限制
      refresh-interval: 100 #单位时间窗口
      type: url #user可指定用户粒度、origin可指定客户端地址粒度、url可指定url粒度
    policies: #针对于不同服务的限流策略
      point-server: #针对于积分服务
        limit: 10
        quota: 10
        refresh-interval: 100
#服务调用的超时设置
ribbon: 
  ReadTimeout: 50000
  ConnectTimeout: 50000
#熔断器超时
hystrix:
  command: 
    default: 
      execution: 
        timeout: 
          enabled: true
        isolation: 
          thread: 
            timeoutInMilliseconds: 100000